-- 코드를 입력하세요
SELECT
    R.REST_ID,
    R.REST_NAME,
    R.FOOD_TYPE,
    R.FAVORITES,
    R.ADDRESS,
    ROUND(AVG(V.REVIEW_SCORE),2) AS SCORE
FROM REST_INFO R
INNER JOIN REST_REVIEW V
    ON R.REST_ID = V.REST_ID
    AND ADDRESS LIKE '서울%'
GROUP BY R.REST_ID, R.REST_NAME, R.FOOD_TYPE, R.FAVORITES, R.ADDRESS
ORDER BY SCORE DESC, FAVORITES DESC;


-- 처음에 주소 필터링을 WHERE절로 처리했었는데, JOIN할 때 부터 지역을 한정지어서 조인거는게 더 효율적!
-- 그리고 리뷰가 존재하는 경우만 처리하니까 INNER JOIN으로!

-- 처음에 짠 쿼리
SELECT
    R.REST_ID,
    R.REST_NAME,
    R.FOOD_TYPE,
    R.FAVORITES,
    R.ADDRESS,
    ROUND(AVG(V.REVIEW_SCORE),2) AS SCORE
FROM REST_INFO R
RIGHT OUTER JOIN REST_REVIEW V -- INNER JOIN으로
    ON R.REST_ID = V.REST_ID
WHERE ADDRESS LIKE '서울%' -- WHERE절로 처리하기 보다는, JOIN할 때 필터링해서 JOIN하는게 더 효율적!
GROUP BY R.REST_ID, R.REST_NAME, R.FOOD_TYPE, R.FAVORITES, R.ADDRESS
ORDER BY SCORE DESC, FAVORITES DESC;
